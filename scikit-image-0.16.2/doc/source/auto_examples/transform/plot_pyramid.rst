.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_transform_plot_pyramid.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_transform_plot_pyramid.py:


====================
Build image pyramids
====================

The ``pyramid_gaussian`` function takes an image and yields successive images
shrunk by a constant scale factor. Image pyramids are often used, e.g., to
implement algorithms for denoising, texture discrimination, and scale-invariant
detection.





.. code-block:: pytb

    Traceback (most recent call last):
      File "/home/jni/projects/scikit-image/doc/examples/transform/plot_pyramid.py", line 21, in <module>
        pyramid = tuple(pyramid_gaussian(image, downscale=2, multichannel=True))
      File "/home/jni/projects/scikit-image/skimage/transform/pyramids.py", line 199, in pyramid_gaussian
        mode, cval, multichannel=multichannel)
      File "/home/jni/projects/scikit-image/skimage/transform/pyramids.py", line 75, in pyramid_reduce
        anti_aliasing=False)
      File "/home/jni/projects/scikit-image/skimage/transform/_warps.py", line 166, in resize
        preserve_range=preserve_range)
      File "/home/jni/projects/scikit-image/skimage/transform/_warps.py", line 860, in warp
        dims.append(_warp_fast[ctype](image[..., dim], matrix,
    TypeError: 'builtin_function_or_method' object is not subscriptable





.. code-block:: python

    import numpy as np
    import matplotlib.pyplot as plt

    from skimage import data
    from skimage.transform import pyramid_gaussian


    image = data.astronaut()
    rows, cols, dim = image.shape
    pyramid = tuple(pyramid_gaussian(image, downscale=2, multichannel=True))

    composite_image = np.zeros((rows, cols + cols // 2, 3), dtype=np.double)

    composite_image[:rows, :cols, :] = pyramid[0]

    i_row = 0
    for p in pyramid[1:]:
        n_rows, n_cols = p.shape[:2]
        composite_image[i_row:i_row + n_rows, cols:cols + n_cols] = p
        i_row += n_rows

    fig, ax = plt.subplots()
    ax.imshow(composite_image)
    plt.show()

**Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_transform_plot_pyramid.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_pyramid.py <plot_pyramid.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_pyramid.ipynb <plot_pyramid.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
