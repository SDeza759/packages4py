.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_segmentation_plot_rag_mean_color.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_segmentation_plot_rag_mean_color.py:


================
RAG Thresholding
================

This example constructs a Region Adjacency Graph (RAG) and merges regions
which are similar in color. We construct a RAG and define edges as the
difference in mean color. We then join regions with similar mean color.




.. image:: /auto_examples/segmentation/images/sphx_glr_plot_rag_mean_color_001.png
    :class: sphx-glr-single-img





.. code-block:: python


    from skimage import data, io, segmentation, color
    from skimage.future import graph
    from matplotlib import pyplot as plt


    img = data.coffee()

    labels1 = segmentation.slic(img, compactness=30, n_segments=400)
    out1 = color.label2rgb(labels1, img, kind='avg')

    g = graph.rag_mean_color(img, labels1)
    labels2 = graph.cut_threshold(labels1, g, 29)
    out2 = color.label2rgb(labels2, img, kind='avg')

    fig, ax = plt.subplots(nrows=2, sharex=True, sharey=True,
                           figsize=(6, 8))

    ax[0].imshow(out1)
    ax[1].imshow(out2)

    for a in ax:
        a.axis('off')

    plt.tight_layout()

**Total running time of the script:** ( 0 minutes  2.099 seconds)


.. _sphx_glr_download_auto_examples_segmentation_plot_rag_mean_color.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_rag_mean_color.py <plot_rag_mean_color.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_rag_mean_color.ipynb <plot_rag_mean_color.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
